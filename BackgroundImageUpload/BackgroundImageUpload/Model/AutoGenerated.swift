////
////  AutoGenerated.swift
////  BackgroundImageUpload
////
////  Created by Apple on 03/02/23.
////
//
//import Foundation
//import UIKit
//
//
//#if canImport(FoundationNetworking)
//import FoundationNetworking
//#endif
//
//
//class AutoGenerated : NSObject {
//    
//    var semaphore = DispatchSemaphore (value: 0)
//    
//    let parameters = [
//        [
//            "key": "file",
//            "src": "/Users/sohilsarkazi/Desktop/Simulator Screen Shot - iPhone 8 Plus - 2023-01-03 at 17.11.15.png",
//            "type": "file"
//        ]] as [[String : Any]]
//    
//    let boundary = "Boundary-\(UUID().uuidString)"
//    var body = ""
//    var error: Error? = nil
//    
//    for param in parameters {
//        if param["disabled"] == nil {
//            let paramName = param["key"]!
//            body += "--\(boundary)\r\n"
//            body += "Content-Disposition:form-data; name=\"\(paramName)\""
//            if param["contentType"] != nil {
//                body += "\r\nContent-Type: \(param["contentType"] as! String)"
//            }
//            let paramType = param["type"] as! String
//            if paramType == "text" {
//                let paramValue = param["value"] as! String
//                body += "\r\n\r\n\(paramValue)\r\n"
//            } else {
//                let paramSrc = param["src"] as! String
//                let fileData = try NSData(contentsOfFile:paramSrc, options:[]) as Data
//                let fileContent = String(data: fileData, encoding: .utf8)!
//                body += "; filename=\"\(paramSrc)\"\r\n"
//                + "Content-Type: \"content-type header\"\r\n\r\n\(fileContent)\r\n"
//            }
//        }
//    }
//    
//    body += "--\(boundary)--\r\n";
//    let postData = body.data(using: .utf8)
//    
//    var request = URLRequest(url: URL(string: "http://127.0.0.1:5000/upload?keyone=valone")!,timeoutInterval: Double.infinity)
//    request.addValue("application/json", forHTTPHeaderField: "Accept")
//    request.addValue("multipart/form-data; boundary=\(boundary)", forHTTPHeaderField: "Content-Type")
//    
//    request.httpMethod = "POST"
//    request.httpBody = postData
//    
//    let task = URLSession.shared.dataTask(with: request) { data, response, error in
//        guard let data = data else {
//            print(String(describing: error))
//            semaphore.signal()
//            return
//        }
//        print(String(data: data, encoding: .utf8)!)
//        semaphore.signal()
//    }
//    
//    task.resume()
//    semaphore.wait()
//    
//}
